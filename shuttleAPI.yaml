openapi: 3.0.0
info:
  title: Shuttle API
  version: 1.0.0

servers:
  - url: https://yrqmrdfwqiihwlecisco.supabase.co/rest/v1
    description: Supabase REST endpoint

paths:
  /User:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
    delete:
      summary: Delete users (by query filter)
      parameters:
        - in: query
          name: id
          schema:
            type: integer
      responses:
        '204':
          description: User deleted

  /Membership:
    get:
      summary: Get all memberships
      responses:
        '200':
          description: List of memberships
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership'
    post:
      summary: Create a new membership
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      responses:
        '201':
          description: Membership created
    delete:
      summary: Delete memberships (by query filter)
      parameters:
        - in: query
          name: id
          schema:
            type: integer
      responses:
        '204':
          description: Membership deleted

  /Poll:
    get:
      summary: Get all polls
      responses:
        '200':
          description: List of polls
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Poll'
    post:
      summary: Create a new poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Poll'
      responses:
        '201':
          description: Poll created
    delete:
      summary: Delete polls (by query filter)
      parameters:
        - in: query
          name: id
          schema:
            type: integer
      responses:
        '204':
          description: Poll deleted

  /PollResponse:
    get:
      summary: Get all poll responses
      responses:
        '200':
          description: List of responses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PollResponse'
    post:
      summary: Submit a poll response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollResponse'
      responses:
        '201':
          description: Poll response created
    delete:
      summary: Delete poll responses (by query filter)
      parameters:
        - in: query
          name: id
          schema:
            type: integer
      responses:
        '204':
          description: Poll response deleted

  /PollSeries:
    get:
      summary: Get all poll series
      responses:
        '200':
          description: List of poll series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PollSeries'
    post:
      summary: Create a new poll series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollSeries'
      responses:
        '201':
          description: Poll series created
    delete:
      summary: Delete poll series (by query filter)
      parameters:
        - in: query
          name: id
          schema:
            type: integer
      responses:
        '204':
          description: Poll series deleted

  /Group:
    get:
      summary: Get all groups
      responses:
        '200':
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    post:
      summary: Create a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          description: Group created
    delete:
      summary: Delete groups (by query filter)
      parameters:
        - in: query
          name: id
          schema:
            type: integer
      responses:
        '204':
          description: Group deleted

components:
  schemas:
    User:
      type: object
      properties:
        Id:
          type: integer
        Name:
          type: string
        Phone Number:
          type: string

    Membership:
      type: object
      properties:
        id:
          type: integer
        GroupId:
          type: integer
        UserId:
          type: integer
        Role:
          type: string

    Poll:
      type: object
      properties:
        Id:
          type: integer
        pollSeriesId:
          type: integer
        Open Date:
          type: string
          format: date
        GroupId:
          type: integer
        Event Date:
          type: string
          format: date
        ReservationOffset:
          type: integer

    PollResponse:
      type: object
      properties:
        Id:
          type: integer
        UserId:
          type: integer
        PollId:
          type: integer
        Response:
          type: string
        Submission Date:
          type: string
          format: date

    PollSeries:
      type: object
      properties:
        Id:
          type: integer
        Start Date:
          type: string
          format: date
        End Date:
          type: string
          format: date
        Title:
          type: string
        GroupId:
          type: integer
        Frequency:
          type: string
        PlayOffset:
          type: integer
        ReservationOffset:
          type: integer

    Group:
      type: object
      properties:
        Id:
          type: integer
        Name:
          type: string
